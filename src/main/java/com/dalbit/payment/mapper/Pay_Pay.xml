<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.payment.dao.Pay_PayDao" >

    <sql id="payCondition">
        <where>
            <if test='sDate != null and sDate != ""'>
                <if test="memberDataType == 1">
                    and pay_dt_comein BETWEEN concat(#{sDate},' 00:00:00') AND concat(#{eDate},' 23:59:59')
                </if>
                <if test="memberDataType == 2">
                    and pay_ok_date BETWEEN #{sDate} and #{eDate}
                </if>
                <if test="memberDataType == 99">
                    <choose>
                        <when test='success == "Y"'>
                            and pay_ok_date BETWEEN #{sDate} and #{eDate}
                        </when>
                        <otherwise>
                            and ( (cancel_dt BETWEEN concat(#{sDate},' 00:00:00') AND concat(#{eDate},' 23:59:59'))
                                or ((pay_dt_comein BETWEEN concat(#{sDate},' 00:00:00') AND concat(#{eDate},' 23:59:59')) or (pay_ok_date BETWEEN #{sDate} and #{eDate} AND pay_yn ='Y') ) )
                            <!--and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y.%m.%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y.%m.%d') ,DATE_FORMAT(pay_ok_date, '%Y.%m.%d'))) <![CDATA[>=]]> #{sDate}-->
                            <!--and if(cancel_dt !='',DATE_FORMAT(cancel_dt, '%Y.%m.%d'),if(pay_ok_date = '' ,DATE_FORMAT(pay_dt_comein, '%Y.%m.%d') ,DATE_FORMAT(pay_ok_date, '%Y.%m.%d'))) <![CDATA[<=]]>  #{eDate}-->
                        </otherwise>
                    </choose>
                    <if test='timeStr != null and timeStr != "" and timeStr != "null"'>
                        and pay_ok_time <![CDATA[>=]]> concat(#{timeStr}, ':00:00')
                        and pay_ok_time <![CDATA[<=]]> concat(#{timeStr}, ':59:59')
                    </if>
                </if>
            </if>
            <if test="searchPayStatus != -1">    <!-- 전체가 아닐때 -->
                <if test="searchPayStatus == 1">  <!-- 결제 완료 -->
                    and pay_yn ='Y'
                </if>
                <if test="searchPayStatus == 2"> <!-- 취소 완료 -->
                    and cancel_state = 'Y'
                </if>
                <if test="searchPayStatus == 3"> <!-- 취소 불가 -->
                    and cancel_state = 'F'
                </if>
                <if test="searchPayStatus == 4">  <!-- 결제 실패 -->
                    and pay_yn ='F'
                </if>
            </if>
            <if test="ostype != -1">
                and os = #{ostype}
            </if>
            <if test="innerType != -1">
                and (b.inner = #{innerType} or c.inner = #{innerType})
            </if>
            <if test="payWay != 'all'">
                and pay_way = #{payWay}
            </if>
            <if test="genderStr != 'null' and genderStr != null">
                and (b.mem_sex = #{genderStr} or c.mem_sex = #{genderStr})
            </if>
            <if test="ageStr != null">
                <if test="ageStr == '00'">
                    and b.mem_birth_year  <![CDATA[>]]> date_format(date_add(now(), interval -10 year), '%Y')
                </if>
                <if test="ageStr == '10'">
                    and b.mem_birth_year  <![CDATA[<=]]> date_format(date_add(now(), interval -10 year), '%Y') and b.mem_birth_year  <![CDATA[>]]> date_format(date_add(now(), interval -20 year), '%Y')
                </if>
                <if test="ageStr == '20'">
                    and b.mem_birth_year  <![CDATA[<=]]> date_format(date_add(now(), interval -20 year), '%Y') and b.mem_birth_year  <![CDATA[>]]> date_format(date_add(now(), interval -30 year), '%Y')
                </if>
                <if test="ageStr == '30'">
                    and b.mem_birth_year  <![CDATA[<=]]> date_format(date_add(now(), interval -30 year), '%Y') and b.mem_birth_year  <![CDATA[>]]> date_format(date_add(now(), interval -40 year), '%Y')
                </if>
                <if test="ageStr == '40'">
                    and b.mem_birth_year  <![CDATA[<=]]> date_format(date_add(now(), interval -40 year), '%Y') and b.mem_birth_year  <![CDATA[>]]> date_format(date_add(now(), interval -50 year), '%Y')
                </if>
                <if test="ageStr == '50'">
                    and b.mem_birth_year  <![CDATA[<=]]> date_format(date_add(now(), interval -50 year), '%Y') and b.mem_birth_year  <![CDATA[>]]> date_format(date_add(now(), interval -60 year), '%Y')
                </if>
                <if test="ageStr == '60'">
                    and b.mem_birth_year  <![CDATA[<=]]> date_format(date_add(now(), interval -60 year), '%Y') and b.mem_birth_year  <![CDATA[>]]> date_format(date_add(now(), interval -70 year), '%Y')
                </if>
            </if>


            <if test='searchText != null and searchText != ""'>
                <if test="slctType == 0">
                    <choose>
                        <when test="newSearchType == 1">
                            and (pay.mem_no = #{searchText} or pay.mem_no = #{searchText} or pay.order_id like concat(#{searchText}, '%'))
                        </when>
                        <when test="newSearchType == 2">
                            and (b.mem_nick like concat('%', #{searchText}, '%') or c.mem_nick like concat('%', #{searchText}, '%') or pay.order_id like concat(#{searchText}, '%'))
                        </when>
                        <when test="newSearchType == 3">
                            and (b.mem_name = #{searchText} or c.mem_name = #{searchText} or pay.order_id like concat(#{searchText}, '%'))
                        </when>
                        <when test="newSearchType == 4">
                            and (b.mem_phone = #{searchText} or c.mem_phone = #{searchText} or pay.order_id like concat(#{searchText}, '%'))
                        </when>
                        <when test="newSearchType == 5">
                            and (b.mem_userid = #{searchText} or c.mem_userid = #{searchText} or pay.order_id like concat(#{searchText}, '%'))
                        </when>
                        <when test="newSearchType == 6">
                            and (pay.mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE ip = #{searchText})
                             or pay.mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE ip = #{searchText})
                             or pay.order_id like concat(#{searchText}, '%'))
                        </when>
                        <when test="newSearchType == 7">
                            and (pay.mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE device_uuid = #{searchText})
                             or pay.mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE device_uuid = #{searchText})
                             or pay.order_id like concat(#{searchText}, '%'))
                        </when>
                        <otherwise>
                            and ((pay.mem_no = #{searchText} or b.mem_nick like concat('%', #{searchText}, '%'))
                             or (pay.mem_no = #{searchText} or c.mem_nick like concat('%', #{searchText}, '%'))
                             or pay.order_id like concat(#{searchText}, '%'))
                        </otherwise>
                    </choose>
                </if>
                <if test="slctType == 1">
                    and ( pay.mem_no = #{searchText} or pay.mem_no = #{searchText} )
                </if>
            </if>

            <!-- <if test='searchText != null and searchText != ""'>
                <if test="slctType == 0">
                    and (((b.mem_nick like concat('%', #{searchText}, '%')
                    or b.mem_no = #{searchText}
                    or b.mem_id= #{searchText}
                    or b.mem_phone like concat('%', #{searchText}, '%'))
                    or (c.mem_nick like concat('%', #{searchText}, '%')
                    or c.mem_no = #{searchText}
                    or c.mem_id = #{searchText}
                    or c.mem_phone like concat('%', #{searchText}, '%'))
                    or (pay.order_id like concat('%', #{searchText}, '%'))))
                </if>
                <if test="slctType == 1">
                    and b.mem_no = #{searchText}
                </if>
            </if>-->
        </where>
    </sql>

    <select id="getPayList" parameterType="com.dalbit.payment.vo.Pay_PayInputVo" resultType="com.dalbit.payment.vo.Pay_PayOutputVo">
        /* Pay_Pay.xml - getPayList */
       SELECT
            @rownum := @rownum + 1 as rowNum, a.*
        FROM(SELECT pay.order_id,
                       pay.mem_no,
                       pay.pay_way,
                       pay.pay_dt_comein,
                       pay.pay_yn,
                       pay.pay_ok_date,
                       pay.pay_ok_time,
                       pay.pay_slct,
                       floor(pay.pay_amt)   as pay_amt,
                       pay.item_amt,
                       pay.pay_code,
                       pay.app_ver,
                       pay.first_pay_yn,
                       pay.card_no,
                       pay.card_nm,
                       pay.phone_no,
                       pay.bank_code,
                       pay.account_no,
                       pay.rcpt_dt,
                       pay.rcpt_nm,
                       pay.store_id,
                       pay.cancel_dt,
                       pay.cancel_state,
                       pay.fail_msg,
                       pay.op_name,
                       pay.bill_id,
                       pay.os,
                       pay.dal_cnt,
                       pay.pay_info,
                       CASE
                           WHEN pay.pay_way = 'CN' THEN pay.card_no
                           WHEN pay.pay_way = 'MC' THEN pay.phone_no
                           WHEN pay.pay_way = 'VA' THEN pay.account_no
                           WHEN pay.pay_way = 'InApp'
                               THEN pay.bill_id END AS pay_info_no,
                       CASE
                           WHEN pay.pay_way = 'CN' THEN pay.card_nm
                           WHEN pay.pay_way = 'VA'
                               THEN pay.bank_code END AS pay_info_nm,
                        (SELECT count(mem_no) FROM rd_data.tb_payment_succ WHERE pay_yn = 'Y' AND mem_no = pay.mem_no) AS 'count',
                        (SELECT sum(pay_amt) paySum FROM rd_data.tb_payment_succ WHERE pay_yn = 'Y' AND mem_no = pay.mem_no) AS amount,
                        money+ruby as tot_dal_cnt,
                        ifnull(concat(b.mem_birth_year, '-', LPAD(b.mem_birth_month, 2, '0'), '-', LPAD(b.mem_birth_day, 2, '0')),
                        concat(c.mem_birth_year, '-', LPAD(c.mem_birth_month, 2, '0'), '-',
                        LPAD(c.mem_birth_day, 2, '0'))) as birth,
                        ifnull(b.inner, c.inner)                      as chrgr_yn,
                        ifnull(b.mem_nick, c.mem_nick)                as mem_nick,
                        ifnull(b.mem_userid, c.mem_userid)            as mem_userid,
                        ifnull(b.mem_id, c.mem_id)                    as mem_id,
                        ifnull(b.mem_phone, c.mem_phone)              as mem_phone,
                        ifnull(b.mem_sex, c.mem_sex)                  as mem_sex,
                        ifnull(b.mem_birth_year, c.mem_birth_year)    as mem_birth_year,
                        ifnull(b.mem_birth_month, c.mem_birth_month)  as mem_birth_month,
                        ifnull(b.mem_birth_day, c.mem_birth_day)      as mem_birth_day,
                        ifnull(b.inner, c.inner)                      as `inner`
                FROM rd_data.tb_payment_succ pay
           LEFT JOIN rd_data.tb_member_wallet wallet ON pay.mem_no = wallet.mem_no
           left join rd_data.tb_member_basic b on b.mem_no = pay.mem_no
           left join rd_data.tb_member_withdrawal_bak c on c.mem_no = pay.mem_no
        <include refid="payCondition"/>
        ) a, (select @rownum := #{pageStart}) r
        order by pay_dt_comein desc
        limit #{pageStart}, #{pageCnt}
    </select>

    <select id="getPayListCnt" parameterType="com.dalbit.payment.vo.Pay_PayInputVo" resultType="integer">
        /* Pay_Pay.xml - getPayListCnt */
       SELECT COUNT(*)
        FROM rd_data.tb_payment_succ pay
              LEFT JOIN  rd_data.tb_member_wallet wallet ON pay.mem_no = wallet.mem_no
           left join rd_data.tb_member_basic b on b.mem_no = pay.mem_no
           left join rd_data.tb_member_withdrawal_bak c on c.mem_no = pay.mem_no
        <include refid="payCondition"/>
    </select>


    <select id="getPaySummary" parameterType="com.dalbit.payment.vo.Pay_PayInputVo" resultType="com.dalbit.payment.vo.Pay_PayOutputVo">
        /* Pay_Pay.xml - getPaySummary */
        SELECT
                count(case when pay_yn = 'Y' then 1 end)       as totalPayCnt,
                count(*)  AS totalTryCnt,
                count(case when pay_yn = 'F' then 1 end)       as totalFailCnt,
                sum(case when pay_yn = 'Y' then pay_amt end) as totalPayAmt,
                count(case when cancel_state = 'Y' then 1 end)       as totalPayCancelCnt,
                sum(case when cancel_state = 'Y' then pay_amt end) as totalPayCancelAmt,
                count(case when cancel_state = 'F' then 1 end)       as totalPayCancelCannotCnt,
                sum(case when cancel_state = 'F' then pay_amt end) as totalPayCancelCannotAmt,
                ifnull(count(case when pay_yn = 'Y' then 1 end),0) - ifnull(count(case when cancel_state = 'Y' then 1 end),0)       AS totalRealPayCnt,
                ifnull(sum(case when pay_yn = 'Y' then pay_amt end),0) - ifnull(sum(case when cancel_state = 'Y' then pay_amt end),0) AS totalRealPayAmt
        FROM rd_data.tb_payment_succ pay
              LEFT JOIN  rd_data.tb_member_wallet wallet ON pay.mem_no = wallet.mem_no
           left join rd_data.tb_member_basic b on b.mem_no = pay.mem_no
           left join rd_data.tb_member_withdrawal_bak c on c.mem_no = pay.mem_no
        <include refid="payCondition"/>
    </select>

    <select id="getTotalPaySum" parameterType="com.dalbit.enter.vo.procedure.P_StatVo" resultType="com.dalbit.payment.vo.Pay_PaySumOutputVo">
        SELECT SUM(succ_cnt) AS totalSuccCnt,
                SUM(pay_amt) AS totalSuccAmt,
                SUM(try_cnt) AS totalTryCnt,
                if( ifnull(SUM(try_cnt),0) > 0, FLOOR((ifnull(SUM(succ_cnt), 0)/SUM(try_cnt))*100), 0) AS totalSuccRate,
                SUM(first_cnt) AS totalFirstCnt,
                SUM(first_amt) AS totalFirstAmt,
                SUM(re_cnt) AS totalReCnt,
                SUM(re_amt) AS totalReAmt,
                SUM(canc_cnt) AS totalCancCnt,
                SUM(canc_amt) AS totalCancAmt
          FROM rd_data.stat_member_payment_total
          <if test='startDate != "" and startDate != null'>
            WHERE the_date BETWEEN #{startDate} AND #{endDate}
          </if>
    </select>


    <sql id="baseIosAttemp">
        select @RNUM := @RNUM + 1 rowNum
            , log.idx
            , log.mem_no
            , log.product_nm
            , log.product_price
            , DATE_FORMAT(log.attempt_date, '%Y-%m-%d %H:%i:%s') attempt_date
            , ifnull(basic.mem_nick, withdrawal.mem_nick) mem_nick
            , ifnull(basic.mem_name, withdrawal.mem_name) mem_name
            , ifnull(basic.mem_state, withdrawal.mem_state) mem_state
            , profile.image_profile
        from rd_data.tb_ios_attempt_log log
            left join rd_data.tb_member_basic basic on log.mem_no = basic.mem_no
            left join rd_data.tb_member_withdrawal_bak withdrawal on log.mem_no = withdrawal.mem_no
            left join rd_data.tb_member_profile profile on log.mem_no = profile.mem_no
            , (select @RNUM := 0) r
      where log.attempt_date between concat(#{txt_startSel},' 00:00:00') AND concat(#{txt_endSel},' 23:59:59')
        <if test='searchText != null and searchText != ""'>
            <choose>
                <when test='searchType == "mem_no"'>
                    and log.mem_no like  concat ('%', #{searchText}, '%')
                </when>
                <when test='searchType == "product_nm"'>
                    and log.product_nm like concat ('%', upper(#{searchText}), '%')
                </when>
                <when test='searchType == "mem_nick"'>
                    and (
                        basic.mem_nick like concat ('%', upper(#{searchText}), '%')
                        or withdrawal.mem_nick like concat ('%', upper(#{searchText}), '%')
                    )
                </when>
                <when test='searchType == "mem_name"'>
                    and (
                        basic.mem_name like concat ('%', upper(#{searchText}), '%')
                        or withdrawal.mem_name like concat ('%', upper(#{searchText}), '%')
                    )
                </when>
                <otherwise>
                    and (
                        log.mem_no like concat ('%', #{searchText}, '%')
                        or log.product_nm like concat ('%', upper(#{searchText}), '%')
                        or basic.mem_nick like concat ('%', upper(#{searchText}), '%')
                        or withdrawal.mem_nick like concat ('%', upper(#{searchText}), '%')
                        or basic.mem_name like concat ('%', upper(#{searchText}), '%')
                        or withdrawal.mem_name like concat ('%', upper(#{searchText}), '%')
                    )
                </otherwise>
            </choose>
        </if>
        order by idx desc
    </sql>

    <select id="selectIosAttempCnt" parameterType="com.dalbit.payment.vo.Pay_IosAttempInputVo" resultType="int">
        /* Pay_Pay.xml - selectIosAttempCnt */
        select count(*)
        from (
            <include refid="baseIosAttemp" />
        ) a
    </select>

    <select id="selectIosAttempList" parameterType="com.dalbit.payment.vo.Pay_IosAttempInputVo" resultType="com.dalbit.payment.vo.Pay_IosAttempOutputVo">
        /* Pay_Pay.xml - selectIosAttempList */
        select *
        from (
            <include refid="baseIosAttemp" />
        ) a
    </select>


    <sql id="baseCooconReceipt">
        select @RNUM := @RNUM + 1 rowNum
        , pay_ok_date
        , rcpt_nm
        , order_id
        , receipt_ok_number
        , pay_amt
        , IF(receipt_code='i', '소득공제용', '지출증빙용') receipt_code
        from rd_data.tb_payment_succ, (select @RNUM := 0 ) AS b
        where pay_yn='y'
          and pay_way='VA'
          and receipt_code != 'n'
          and pay_ok_date between concat(#{txt_startSel},' 00:00:00') AND concat(#{txt_endSel},' 23:59:59')
        <if test='searchText != null and searchText != ""'>
            <choose>
                <when test='searchType == "rcpt_nm"'>
                    and rcpt_nm = #{searchText}
                </when>
                <when test='searchType == "receipt_ok_number"'>
                    and receipt_ok_number = #{searchText}
                </when>
                <otherwise>
                    and (
                    rcpt_nm like concat ('%', upper(#{searchText}), '%')
                    or receipt_ok_number like concat ('%', upper(#{searchText}), '%')
                    )
                </otherwise>
            </choose>
        </if>
        order by pay_dt_comein asc
    </sql>

    <select id="selectCooconReceiptCnt" parameterType="com.dalbit.payment.vo.Pay_CooconReceiptInputVo" resultType="int">
        /* Pay_Pay.xml - selectCooconReceiptCnt */
        select count(*)
        from (
        <include refid="baseCooconReceipt" />
        ) a
    </select>

    <select id="selectCooconReceiptList" parameterType="com.dalbit.payment.vo.Pay_CooconReceiptInputVo" resultType="com.dalbit.payment.vo.Pay_CooconReceiptOutputVo">
        /* Pay_Pay.xml - selectCooconReceiptList */
        select *
        from (
        <include refid="baseCooconReceipt" />
        ) a
    </select>


    <insert id="payAdd" parameterType="com.dalbit.payment.vo.Pay_PayAddVo">
        /* Pay_Pay.xml - payAdd */
        INSERT INTO rd_data.tb_payment_succ(
            order_id
            , mem_no
            , pay_way
            , pay_dt_comein
            , pay_ok_date
            , pay_ok_time
            , pay_amt
            , item_amt
            , item_code
            , pay_code
            , pay_info
            , pay_ip
            , login_media
            , app_ver
            , bill_id
            , service_id
            , os
            , dal_cnt
            , dal_yn
        ) values (
            #{order_id}
            , #{mem_no}
            , #{pay_way}
            , #{pay_dt_comein}
            , #{pay_ok_date}
            , #{pay_ok_time}
            , (select item_price from rd_data.tbl_charge_item where item_code = #{item_code}) * #{item_amt}
            , #{item_amt}
            , #{item_code}
            , (select item_name from rd_data.tbl_charge_item where item_code = #{item_code})
            , #{pay_info}
            , #{pay_ip}
            , #{login_media}
            , (select ifnull(app_version, '') from rd_data.tb_member_session where mem_no = #{mem_no} order by last_upd_date desc limit 1)
            , #{bill_id}
            , #{service_id}
            , #{os}
            , (select dal from rd_data.tbl_charge_item where item_code = #{item_code}) * #{item_amt}
            , #{dal_yn}
        )
    </insert>

    <update id="payUpdate" parameterType="com.dalbit.payment.vo.Pay_PayAddVo">
        /* Pay_Pay.xml - payUpdate */
        UPDATE rd_data.tb_payment_succ pay
        SET pay_yn = #{pay_yn}
        WHERE order_id = #{order_id}
    </update>

</mapper>