<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.member.dao.Mem_JoinDao" >

    <select id="callJoinList" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberJoinOutputVo">
        select @rownum := @rownum + 1 as rowNum, c.*
          from ( select if(a.inner = 1 ,'Test',null) testId
                        ,a.*
                        , (select count(*) from rd_data.tb_member_broadcast_broadcasting where mem_no = a.mem_no) broadcastCnt
                        , (select count(*) from rd_data.tb_member_broadcast_listening where mem_no = a.mem_no) listenCnt
                        , (select count(distinct DATE_FORMAT(start_date, '%Y%m%d')) from rd_data.tb_member_broadcast_listening where mem_no = a.mem_no) listenCnt2
                        , (select count(*) from rd_data.tb_payment_succ where mem_no = a.mem_no and pay_yn = 'Y') payCnt
                   From rd_data.tb_member_basic a
                  where mem_join_date between concat(#{sDate}, ' 00:00:00') and concat(#{eDate}, ' 23:59:59')
                    <if test="testid != -1">
                        and a.inner = 0
                    </if>
                    <if test="memJoinPath == 1">
                        and a.join_path is not null
                        and a.join_path != ''
                    </if>
                    <if test='searchText != null and searchText != ""'>
                        <choose>
                            <when test="newSearchType == 1">
                                and mem_no = #{searchText}
                            </when>
                            <when test="newSearchType == 2">
                                and mem_nick like concat('%', #{searchText}, '%')
                            </when>
                            <when test="newSearchType == 3">
                                and mem_name = #{searchText}
                            </when>
                            <when test="newSearchType == 4">
                                and mem_phone = #{searchText}
                            </when>
                            <when test="newSearchType == 5">
                                and mem_userid = #{searchText}
                            </when>
                            <when test="newSearchType == 6">
                                and mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE ip = #{searchText})
                            </when>
                            <otherwise>
                                and mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE device_uuid = #{searchText})
                            </otherwise>
                        </choose>
                    </if>
                   <!-- and (mem_no like concat('%', #{searchText}, '%')
                       or mem_name like concat('%', #{searchText}, '%')
                       or mem_userid like concat('%', #{searchText}, '%')
                       or mem_nick like concat('%', #{searchText}, '%')
                       or mem_phone like concat('%', #{searchText}, '%')
                       or mem_id like concat('%', #{searchText}, '%')
                       or mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE device_uuid = #{searchText}))-->
                )as c, (select @rownum := #{pageNo} ) AS d


        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="memJoinDateSort == 0"> mem_join_date desc, </if>
            <if test="memJoinDateSort == 1"> mem_join_date asc, </if>
            <if test="memNickSort == 0"> mem_nick desc, </if>
            <if test="memNickSort == 1"> mem_nick asc, </if>
            <if test="memLoginIdSort == 0"> mem_id desc, </if>
            <if test="memLoginIdSort == 1"> mem_id asc, </if>
            <if test="memIpSort == 0"> ip desc, </if>
            <if test="memIpSort == 1"> ip asc, </if>
            <if test="memJoinDateSort == -1 and memNickSort == -1 and memLoginIdSort == -1 and memIpSort == -1">
              mem_join_date desc,
            </if>
        </trim>

         limit #{pageNo}, #{pageCnt}
    </select>

    <select id="callJoinList_totalCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="integer">
        select count(*) totalCnt From rd_data.tb_member_basic a
          where mem_join_date between concat(#{sDate}, ' 00:00:00') and concat(#{eDate}, ' 23:59:59')
            <if test="testid != -1">
                and a.inner = 0
            </if>
            <if test="memJoinPath == 1">
                and a.join_path is not null
                and a.join_path != ''
            </if>
            <if test='searchText != null and searchText != ""'>
                <choose>
                    <when test="newSearchType == 1">
                        and mem_no = #{searchText}
                    </when>
                    <when test="newSearchType == 2">
                        and mem_nick like concat('%', #{searchText}, '%')
                    </when>
                    <when test="newSearchType == 3">
                        and mem_name = #{searchText}
                    </when>
                    <when test="newSearchType == 4">
                        and mem_phone = #{searchText}
                    </when>
                    <when test="newSearchType == 5">
                        and mem_userid = #{searchText}
                    </when>
                    <when test="newSearchType == 6">
                        and mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE ip = #{searchText})
                    </when>
                    <otherwise>
                        and mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE device_uuid = #{searchText})
                    </otherwise>
                </choose>
            </if>
    </select>

    <select id="callJoinList_slctCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberJoinOutputVo">
        select count(*) as allCnt
                ,count(case when mem_slct = 'p' then 1 end) as slctPhonCnt
                ,count(case when mem_slct = 'f' then 1 end) as slctFaceCnt
                ,count(case when mem_slct = 'g' then 1 end) as slctGoogleCnt
                ,count(case when mem_slct = 'k' then 1 end) as slctKakaoCnt
                ,count(case when mem_slct = 'n' then 1 end) as slctNaverCnt
                ,count(case when mem_slct = 'i' then 1 end) as slctAppleCnt
                ,count(case when os_type = 1 then 1 end) as aosCnt
                ,count(case when os_type = 2 then 1 end) as iosCnt
                ,count(case when os_type = 3 then 1 end) as pcCnt
         From rd_data.tb_member_basic a
        where mem_join_date between concat(#{sDate}, ' 00:00:00') and concat(#{eDate}, ' 23:59:59')
            <if test="testid != -1">
                and a.inner = 0
            </if>
    </select>


    <select id="callWithdrawalList" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberJoinOutputVo">
        select @rownum := @rownum + 1 as rowNum, c.*, TIMESTAMPDIFF(SECOND,mem_join_date,last_upd_date) AS serviceDate
          from ( select if(a.inner = 1 ,'Test',null) testId
                        ,a.*
                        , (select count(*) from rd_data.tb_member_broadcast_broadcasting where mem_no = a.mem_no) broadcastCnt
                        , (select count(*) from rd_data.tb_member_broadcast_listening where mem_no = a.mem_no) listenCnt
                        , (select count(distinct DATE_FORMAT(start_date, '%Y%m%d')) from rd_data.tb_member_broadcast_listening where mem_no = a.mem_no) listenCnt2
                        , (select count(*) from rd_data.tb_payment_succ where mem_no = a.mem_no and pay_yn = 'Y') payCnt
                   From rd_data.tb_member_withdrawal_bak a
                  where last_upd_date between concat(#{sDate}, ' 00:00:00') and concat(#{eDate}, ' 23:59:59')
                   <if test="testid != -1">
                       and a.inner = 0
                   </if>
                   <if test="memJoinPath == 1">
                       and a.join_path is not null
                       and a.join_path != ''
                   </if>
                   <if test='searchText != null and searchText != ""'>
                        <choose>
                            <when test="newSearchType == 1">
                                and mem_no = #{searchText}
                            </when>
                            <when test="newSearchType == 2">
                                and mem_nick like concat('%', #{searchText}, '%')
                            </when>
                            <when test="newSearchType == 3">
                                and mem_name = #{searchText}
                            </when>
                            <when test="newSearchType == 4">
                                and mem_phone = #{searchText}
                            </when>
                            <when test="newSearchType == 5">
                                and mem_userid = #{searchText}
                            </when>
                            <when test="newSearchType == 6">
                                and mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE ip = #{searchText})
                            </when>
                            <otherwise>
                                and mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE device_uuid = #{searchText})
                            </otherwise>
                        </choose>
                    </if>
                ) as c, (select @rownum := #{pageNo} ) AS d

        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="memJoinDateSort_withdrawal == 0"> mem_join_date desc, </if>
            <if test="memJoinDateSort_withdrawal == 1"> mem_join_date asc, </if>
            <if test="memNickSort_withdrawal == 0"> mem_nick desc, </if>
            <if test="memNickSort_withdrawal == 1"> mem_nick asc, </if>
            <if test="memLoginIdSort_withdrawal == 0"> mem_id desc, </if>
            <if test="memLoginIdSort_withdrawal == 1"> mem_id asc, </if>
            <if test="memIpSort_withdrawal == 0"> ip desc, </if>
            <if test="memIpSort_withdrawal == 1"> ip asc, </if>

            <if test="withdrawalDateSort == 0"> last_upd_date desc, </if>
            <if test="withdrawalDateSort == 1"> last_upd_date asc, </if>
            <if test="serviceDateSort == 0"> serviceDate desc, </if>
            <if test="serviceDateSort == 1"> serviceDate asc, </if>

            <if test="withdrawalDateSort == -1 and serviceDateSort == -1 and memJoinDateSort_withdrawal == -1 and memNickSort_withdrawal == -1 and memLoginIdSort_withdrawal == -1 and memIpSort_withdrawal == -1">
                last_upd_date desc,
            </if>
        </trim>

         limit #{pageNo}, #{pageCnt}
    </select>

    <select id="callWithdrawalList_totalCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="integer">
         select count(*) AS totalCnt
           From rd_data.tb_member_withdrawal_bak a
          where last_upd_date between concat(#{sDate}, ' 00:00:00') and concat(#{eDate}, ' 23:59:59')
           <if test="testid != -1">
               and a.inner = 0
           </if>
           <if test="memJoinPath == 1">
               and a.join_path is not null
               and a.join_path != ''
           </if>
           <if test='searchText != null and searchText != ""'>
                <choose>
                    <when test="newSearchType == 1">
                        and mem_no = #{searchText}
                    </when>
                    <when test="newSearchType == 2">
                        and mem_nick like concat('%', #{searchText}, '%')
                    </when>
                    <when test="newSearchType == 3">
                        and mem_name = #{searchText}
                    </when>
                    <when test="newSearchType == 4">
                        and mem_phone = #{searchText}
                    </when>
                    <when test="newSearchType == 5">
                        and mem_userid = #{searchText}
                    </when>
                    <when test="newSearchType == 6">
                        and mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE ip = #{searchText})
                    </when>
                    <otherwise>
                        and mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE device_uuid = #{searchText})
                    </otherwise>
                </choose>
            </if>
    </select>

    <select id="callWithdrawalList_slctCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberJoinInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberJoinOutputVo">
        select count(*) as allCnt
                ,count(case when mem_slct = 'p' then 1 end) as slctPhonCnt
                ,count(case when mem_slct = 'f' then 1 end) as slctFaceCnt
                ,count(case when mem_slct = 'g' then 1 end) as slctGoogleCnt
                ,count(case when mem_slct = 'k' then 1 end) as slctKakaoCnt
                ,count(case when mem_slct = 'n' then 1 end) as slctNaverCnt
                ,count(case when mem_slct = 'i' then 1 end) as slctAppleCnt
                ,count(case when os_type = 1 then 1 end) as aosCnt
                ,count(case when os_type = 2 then 1 end) as iosCnt
                ,count(case when os_type = 3 then 1 end) as pcCnt
                ,count(case when mem_sex = 'm' then 1 end) as maleCnt
                ,count(case when mem_sex = 'f' then 1 end) as femaleCnt
                ,count(case when mem_sex = 'n' then 1 end) as noneCnt
         From rd_data.tb_member_withdrawal_bak a
        where last_upd_date between concat(#{sDate}, ' 00:00:00') and concat(#{eDate}, ' 23:59:59')
         <if test="testid != -1">
           and a.inner = 0
         </if>
         <if test="memJoinPath == 1">
           and a.join_path is not null
           and a.join_path != ''
         </if>
         <if test='searchText != null and searchText != ""'>
                <choose>
                    <when test="newSearchType == 1">
                        and mem_no = #{searchText}
                    </when>
                    <when test="newSearchType == 2">
                        and mem_nick like concat('%', #{searchText}, '%')
                    </when>
                    <when test="newSearchType == 3">
                        and mem_name = #{searchText}
                    </when>
                    <when test="newSearchType == 4">
                        and mem_phone = #{searchText}
                    </when>
                    <when test="newSearchType == 5">
                        and mem_userid = #{searchText}
                    </when>
                    <when test="newSearchType == 6">
                        and mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE ip = #{searchText})
                    </when>
                    <otherwise>
                        and mem_no in (SELECT distinct mem_no FROM rd_data.tb_member_session_history WHERE device_uuid = #{searchText})
                    </otherwise>
                </choose>
            </if>
    </select>

    <select id="callDormancyList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.member.vo.procedure.P_DormancyOutputVo">
        call rd_admin.sp_admin_member_sleep_return_list(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callMemberReturn" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.common.vo.ProcedureVo">
        call rd_data.sp_member_sleep_return(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>
</mapper>