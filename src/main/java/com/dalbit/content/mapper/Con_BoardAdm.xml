<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.content.dao.Con_BoardAdmDao" >

    <sql id="fanBoardCondition">
        <where>
            <if test='txt_search != null and txt_search != ""'>
                <if test='fanBoardOwner == 0'>
                    ((select mem_no from rd_data.tb_member_basic where mem_no = fan.mem_no) = #{txt_search}
                    or (select mem_nick from rd_data.tb_member_basic where mem_no = fan.mem_no) like concat ('%',#{txt_search},'%')
                    or (select mem_no from rd_data.tb_member_basic where mem_no = fan.writer_no) = #{txt_search}
                    or (select mem_nick from rd_data.tb_member_basic where mem_no = fan.writer_no) like concat ('%',#{txt_search},'%'))
                </if>
                <if test='fanBoardOwner == 1'>
                    ((select mem_no from rd_data.tb_member_basic where mem_no = fan.mem_no) = #{txt_search}
                    or (select mem_nick from rd_data.tb_member_basic where mem_no = fan.mem_no) like concat ('%',#{txt_search},'%'))
                </if>
                <if test='fanBoardOwner == 2'>
                    ((select mem_no from rd_data.tb_member_basic where mem_no = fan.writer_no) = #{txt_search}
                    or (select mem_nick from rd_data.tb_member_basic where mem_no = fan.writer_no) like concat ('%',#{txt_search},'%'))
                </if>
            </if>
            <if test='start_sel != null and start_sel != ""'>
                and fan.last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{start_sel}, '%Y.%m.%d 00:00:00')
            </if>
            <if test='end_sel != null and end_sel != ""'>
                and fan.last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{end_sel}, '%Y.%m.%d 23:59:59')
            </if>
            <if test='searchType == "2" '>    <!-- 비밀글만 보기 -->
                and fan.view_yn = 0
            </if>
            <if test='searchType == "3" '>    <!-- 삭제글만 보기 -->
                and fan.`status` = 2
            </if>
            <if test="boardType == 1">
                and fan.depth = 1
            </if>
            <if test="boardType == 2">
                and fan.depth = 2
            </if>
            <if test='status != 0'>
                and fan.`status` = #{status}
            </if>
            <if test='isSecret == 1'>
                and fan.view_yn = 1
            </if>
            <if test='isSecret == 2'>
                and fan.view_yn != 1
            </if>

            <if test="isWithdarwal == 1">
                <if test="boardType == 1">
                    and ifnull((select mem_userid from rd_data.tb_member_basic a where a.mem_no = fan.writer_no), 'Y') != 'Y'
                </if>
                <if test="boardType == 2">
                    and (ifnull((select mem_userid from rd_data.tb_member_basic a where a.mem_no = fan.writer_no), 'Y') != 'Y'
                    or ifnull((select mem_userid from rd_data.tb_member_basic a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no)), 'Y') != 'Y')
                </if>
            </if>
            <if test="isWithdarwal == 2">
                <if test="boardType == 1">
                    and ifnull((select mem_userid from rd_data.tb_member_basic a where a.mem_no = fan.writer_no), 'Y') = 'Y'
                </if>
                <if test="boardType == 2">
                    and (ifnull((select mem_userid from rd_data.tb_member_basic a where a.mem_no = fan.writer_no), 'Y') = 'Y'
                     or ifnull((select mem_userid from rd_data.tb_member_basic a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no)), 'Y') = 'Y')
                </if>
            </if>
            <if test="isMemblock == 1">
                and fan.writer_no not in (select black_mem_no from rd_data.tb_member_broadcast_black where mem_no = fan.mem_no)
            </if>
            <if test="isMemblock == 2">
                and fan.writer_no in (select black_mem_no from rd_data.tb_member_broadcast_black where mem_no = fan.mem_no)
            </if>

        </where>
    </sql>

    <select id="selectFanBoardList" parameterType="com.dalbit.content.vo.BoardAdmFanBoardVo" resultType="com.dalbit.content.vo.BoardAdmFanBoardVo">
        select *
          from (
            select
                fan.idx
                , fan.board_no
                , (select pro.image_profile from rd_data.tb_member_profile pro where pro.mem_no = fan.mem_no) as star_image_profile
                , fan.mem_no as star_mem_no
                , ifnull(member.mem_userid, withdrawal_member.mem_userid) as star_userid
                , ifnull(member.mem_nick, withdrawal_member.mem_nick) as star_mem_nick
                , ifnull(member.mem_state, withdrawal_member.mem_state) as star_mem_state
                , ifnull(member.mem_sex, withdrawal_member.mem_sex) as star_mem_sex
                , ifnull(member.mem_birth_year, withdrawal_member.mem_birth_year) as star_birth_year
                , ifnull(member.mem_userid, 'Y') as star_withdrawalType
                <if test="boardType == 1">
                    , (select pro.image_profile from rd_data.tb_member_profile pro where pro.mem_no = fan.writer_no) as fan_image_profile
                    , fan.writer_no as fan_mem_no
                    , ifnull(writer_member.mem_userid, writer_withdrawal_member.mem_userid)  as fan_userid
                    , ifnull(writer_member.mem_nick, writer_withdrawal_member.mem_nick) as fan_mem_nick
                    , ifnull(writer_member.mem_state, writer_withdrawal_member.mem_state) as fan_mem_state
                    , ifnull(writer_member.mem_sex, writer_withdrawal_member.mem_sex) as fan_mem_sex
                    , ifnull(writer_member.mem_birth_year, writer_withdrawal_member.mem_birth_year) as fan_birth_year
                    , ifnull(writer_member.inner, writer_withdrawal_member.inner) as fan_inner
                    , ifnull(writer_member.mem_userid, 'Y') as fan_withdrawalType
                </if>
                <if test="boardType == 2">
                    , (select pro.image_profile from rd_data.tb_member_profile pro where pro.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no)) as fan_image_profile
                    , (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no) as fan_mem_no
                    , ifnull((select mem_userid from rd_data.tb_member_basic a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no)),
                              (select mem_userid from rd_data.tb_member_withdrawal_bak a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no)))  as fan_userid
                    , ifnull((select mem_nick from rd_data.tb_member_basic a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no)),
                              (select mem_nick from rd_data.tb_member_withdrawal_bak a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no))) as fan_mem_nick
                    , ifnull((select mem_state from rd_data.tb_member_basic a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no)),
                              (select mem_state from rd_data.tb_member_withdrawal_bak a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no))) as fan_mem_state
                    , ifnull((select mem_sex from rd_data.tb_member_basic a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no)),
                              (select mem_sex from rd_data.tb_member_withdrawal_bak a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no))) as fan_mem_sex
                    , ifnull((select mem_birth_year from rd_data.tb_member_basic a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no)),
                              (select mem_birth_year from rd_data.tb_member_withdrawal_bak a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no))) as fan_birth_year
                    , ifnull((select mem_userid from rd_data.tb_member_basic a where a.mem_no = (select writer_no from rd_data.tb_member_fanboard where idx=fan.board_no)), 'Y') as fan_withdrawalType

                    , (select pro.image_profile from rd_data.tb_member_profile pro where pro.mem_no = fan.writer_no) as fan_reply_image_profile
                    , fan.writer_no as fan_reply_mem_no
                    , ifnull(writer_member.mem_userid, writer_withdrawal_member.mem_userid)  as fan_reply_userid
                    , ifnull(writer_member.mem_nick, writer_withdrawal_member.mem_nick) as fan_reply_mem_nick
                    , ifnull(writer_member.mem_state, writer_withdrawal_member.mem_state) as fan_reply_mem_state
                    , ifnull(writer_member.mem_sex, writer_withdrawal_member.mem_sex) as fan_reply_mem_sex
                    , ifnull(writer_member.mem_birth_year, writer_withdrawal_member.mem_birth_year) as fan_reply_birth_year
                    , ifnull(writer_member.inner, writer_withdrawal_member.inner) as fan_inner
                    , ifnull(writer_member.mem_userid, 'Y') as fan_reply_withdrawalType
                </if>
                , fan.last_upd_date
                <if test="boardType == 1">
                  , fan.status as status
                  , fan.contents
                  ,'' replyContents
                </if>
                <if test="boardType == 2">
                    , (select status from rd_data.tb_member_fanboard where idx=fan.board_no) as status
                    , fan.status as reply_status
                    , (select contents from rd_data.tb_member_fanboard where idx=fan.board_no) as contents
                    , fan.contents as replyContents
                </if>
                , fan.view_yn
                , fan.depth
                , ifnull(fan.opName,'') as opName
                , (select count(*) from rd_data.tb_member_fanboard WHERE mem_no =  fan.mem_no and `status` = 1 AND board_no = fan.board_no AND depth = 2 ) as replyCnt
                , @RNUM := @RNUM +1 as rowNum
            from rd_data.tb_member_fanboard fan
                inner join (select @RNUM := 0) r
                left outer join rd_data.tb_member_basic member on fan.mem_no = member.mem_no
                left outer join rd_data.tb_member_withdrawal_bak withdrawal_member on fan.mem_no = withdrawal_member.mem_no
                left outer join rd_data.tb_member_basic writer_member on fan.writer_no = writer_member.mem_no
                left outer join rd_data.tb_member_withdrawal_bak writer_withdrawal_member on fan.writer_no = writer_withdrawal_member.mem_no
                <include refid="fanBoardCondition"/>
        <if test='searchType == "1" '>    <!-- 댓글 많은 수 부터 보기 -->
            order by replyCnt desc
        </if>
        <if test='searchType != "1" '>    <!-- 최근 등록 순으로 보기 -->
            order by fan.idx desc
        </if>
        ) a
        where rowNum between #{searchStartNo, jdbcType=INTEGER} and #{searchEndNo, jdbcType=INTEGER}
    </select>

    <select id="selectFanBoardListCnt" parameterType="com.dalbit.content.vo.BoardAdmFanBoardVo" resultType="integer">
      select
        count(*)
      from rd_data.tb_member_fanboard fan
        <include refid="fanBoardCondition"/>
    </select>

    <select id="selectFanBoardSummary" parameterType="com.dalbit.content.vo.BoardAdmFanBoardVo" resultType="com.dalbit.content.vo.BoardAdmFanBoardVo">
        select count(*) as totalCnt
            ,sum(if((select mem_sex from rd_data.tb_member_basic where mem_no = fan.writer_no) = 'm',1,0)) as maleCnt
            ,sum(if((select mem_sex from rd_data.tb_member_basic where mem_no = fan.writer_no) = 'f',1,0)) as femaleCnt
            ,sum(if((select mem_sex from rd_data.tb_member_basic where mem_no = fan.writer_no) = 'n',1,0)) as noneCnt
            ,sum(if(view_yn = 0,1,0)) as secretTotalCnt
            ,sum(if(view_yn = 0,if((select mem_sex FROM rd_data.tb_member_basic WHERE mem_no = fan.writer_no) = 'm', 1, 0),0)) as secretMaleCnt
            ,sum(if(view_yn = 0,if((select mem_sex FROM rd_data.tb_member_basic WHERE mem_no = fan.writer_no) = 'f', 1, 0),0)) as secretFemaleCnt
            ,sum(if(view_yn = 0,if((select mem_sex FROM rd_data.tb_member_basic WHERE mem_no = fan.writer_no) = 'n', 1, 0),0)) as secretNoneCnt
            from rd_data.tb_member_fanboard as fan
        <include refid="fanBoardCondition"/>
    </select>

    <!-- 팬보드 통계 -->
    <!-- <select id="selectFanBoardSummary" parameterType="com.dalbit.content.vo.BoardAdmFanBoardVo" resultType="com.dalbit.content.vo.BoardAdmFanBoardVo">
      select totalCnt,(totalCnt/datediff) as avgTotalCnt,  totalDelCnt, (totalDelCnt/datediff) as avgTotalDelCnt, maleCnt, femaleCnt, noneCnt, type, datediff
          from (
        select count(*) as totalCnt
                , sum(if(view_yn=0,1,0)) as totalDelCnt
                , sum(if((select mem_sex From rd_data.tb_member_basic where mem_no = fan.mem_no) = 'm', 1, 0)) as maleCnt
                , sum(if((select mem_sex From rd_data.tb_member_basic where mem_no = fan.mem_no) = 'f', 1, 0)) as femaleCnt
                , sum(if((select mem_sex From rd_data.tb_member_basic where mem_no = fan.mem_no) = 'n', 1, 0)) as noneCnt
                , DATEDIFF(DATE_FORMAT(#{end_sel}, '%Y.%m.%d 23:59:59'),DATE_FORMAT(#{start_sel}, '%Y.%m.%d 00:00:00')) as datediff
                , 'nomal' as type
        from rd_data.tb_member_fanboard fan
        <include refid="fanBoardCondition"/>
        union
        select count(*) as totalCnt
                , sum(if(view_yn=0,1,0)) as totalDelCnt
                , sum(if((select mem_sex From rd_data.tb_member_basic where mem_no = fan.mem_no) = 'm', 1, 0)) as maleCnt
                , sum(if((select mem_sex From rd_data.tb_member_basic where mem_no = fan.mem_no) = 'f', 1, 0)) as femaleCnt
                , sum(if((select mem_sex From rd_data.tb_member_basic where mem_no = fan.mem_no) = 'n', 1, 0)) as noneCnt
                , DATEDIFF(DATE_FORMAT(#{end_sel}, '%Y.%m.%d 23:59:59'),DATE_FORMAT(#{start_sel}, '%Y.%m.%d 00:00:00')) as datediff
                , 'del' as type
        From rd_data.tb_member_fanboard fan
        <include refid="fanBoardCondition"/>
         and status='2'
        ) a
    </select>-->

    <update id="deleteFanBoard">
        update rd_data.tb_member_fanboard
        set `status` = 2, opName = #{opName}
        where idx = #{idx}
    </update>

    <select id="selectReply" parameterType="com.dalbit.content.vo.BoardAdmFanBoardReplyVo" resultType="com.dalbit.content.vo.BoardAdmFanBoardReplyVo">
        SELECT
              a.idx AS board_idx,
              a.board_no AS board_no,
              a.writer_no AS writer_mem_no,
              ifnull(bas.mem_nick, bak.mem_nick) AS nickName,
              ifnull(bas.mem_userid, bak.mem_userid) as userId,
              ifnull(bas.mem_sex, bak.mem_sex) AS memSex,
              ifnull(bas.mem_birth_year, bak.mem_birth_year) as mem_birth_year,
              ( SELECT image_profile FROM rd_data.tb_member_profile WHERE mem_no = a.writer_no ) AS profileImage,
              a.contents AS contents,
              a.`status` AS `status`,
              a.last_upd_date AS writeDate,
              a.view_yn,
              depth
         from (select idx, board_no, contents, writer_no, `status`, last_upd_date, depth,view_yn from rd_data.tb_member_fanboard where mem_no = #{mem_no} and board_no = #{board_no} and `status` = 1) as a
          left outer join rd_data.tb_member_basic bas on a.writer_no = bas.mem_no
          left outer join rd_data.tb_member_withdrawal_bak bak on a.writer_no = bak.mem_no
          order by writeDate desc
    </select>

    <sql id="storyCondition">
        <where>
            <if test='txt_search != null and txt_search != ""'>
                (bas.mem_no = #{txt_search}
                or sto.writer_no  = #{txt_search}
                OR bas.mem_userid  = #{txt_search}
                or sto.mem_userid  = #{txt_search}
                OR bas.mem_nick like CONCAT('%',#{txt_search},'%')
                or sto.mem_nick like CONCAT('%', #{txt_search}, '%')
                )
            </if>
            <if test='start_sel != null and start_sel !=""'>
                 and sto.write_date <![CDATA[>=]]> DATE_FORMAT(#{start_sel}, '%Y.%m.%d 00:00:00')
            </if>
            <if test='end_sel != null and end_sel != ""'>
                 and sto.write_date <![CDATA[<=]]> DATE_FORMAT(#{end_sel}, '%Y.%m.%d 23:59:59')
            </if>
            <if test='broState != 0'>
                <if test='broState == 1'>
                    and bro.state != 4
                </if>
                <if test='broState == 2'>
                    and bro.state = 4
                </if>
            </if>
        </where>
    </sql>

    <select id="selectStoryList" parameterType="com.dalbit.content.vo.BoardAdmStoryVo" resultType="com.dalbit.content.vo.BoardAdmStoryVo">
    /* Con_BoardAdm.xml - selectStoryList*/
        select
          a.*
        from (
            select
            sto.idx as storyIdx,
            sto.room_no as room_no,
            sto.status as status,
            bas.mem_no     as dj_mem_no,
            bas.mem_nick   as dj_mem_nick,
            bas.mem_userid as dj_mem_userid,
            bas.mem_sex    as dj_mem_sex,
            bas.mem_birth_year as dj_birth_year,
            bro.title      as title,
            bro.state      as broState,
            sto.mem_nick   as send_mem_nick,
            sto.mem_userid as send_mem_userid,
            sto.mem_sex    as send_mem_sex,
            sto.writer_no as send_mem_no,
            (select `inner` from rd_data.tb_member_basic where mem_no = sto.writer_no) as send_inner,
            (select bas.mem_birth_year
            from rd_data.tb_broadcast_room_story sto inner join rd_data.tb_member_basic bas on sto.writer_no = bas.mem_no
            where bas.mem_no = send_mem_no group by bas.mem_no) as send_birth_year,
            sto.write_date as send_date,
            sto.contents   as story_content,
            (select count(*) from rd_data.tb_broadcast_room_story where room_no = bro.room_no) as storyCnt,
            (select count(*) from rd_data.tb_broadcast_room_story where writer_no = sto.writer_no) as sendStoryCnt,
            @RNUM := @RNUM + 1 as rowNum
        FROM rd_data.tb_broadcast_room_story sto
        JOIN rd_data.tb_broadcast_room bro ON sto.room_no = bro.room_no
        JOIN rd_data.tb_member_basic bas ON bro.mem_no = bas.mem_no
        , (select @RNUM := 0) r
        <include refid="storyCondition"/>
        <if test="searchType == 0">
          order by sto.idx desc
        </if>
        <if test="searchType == 1">
            order by storyCnt desc
        </if>
        <if test="searchType == 2">
            order by sendStoryCnt desc
        </if>
        <if test="searchType == 3">
          order by sto.idx asc
        </if>
        ) a
        where rowNum between #{searchStartNo, jdbcType=INTEGER} and #{searchEndNo, jdbcType=INTEGER}
    </select>

    <select id="selectStoryListCnt" parameterType="com.dalbit.content.vo.BoardAdmStoryVo" resultType="integer">
      /* Con_BoardAdm.xml - selectStoryListCnt*/
      select
        count(*)
        FROM rd_data.tb_broadcast_room_story sto
        JOIN rd_data.tb_broadcast_room bro ON sto.room_no = bro.room_no
        JOIN rd_data.tb_member_basic bas ON bro.mem_no = bas.mem_no
        <include refid="storyCondition"/>
    </select>

    <select id="selectStoryListSummary" parameterType="com.dalbit.content.vo.BoardAdmStoryVo" resultType="com.dalbit.content.vo.BoardAdmStoryVo">
      /* Con_BoardAdm.xml - selectStoryListSummary*/
      SELECT count(*) as totalCnt
              ,sum(if(bas.mem_sex = 'm',1,0)) as maleCnt
              ,sum(if(bas.mem_sex = 'f',1,0)) as femaleCnt
              ,sum(if(bas.mem_sex = 'n',1,0)) as noneCnt
        FROM rd_data.tb_broadcast_room_story sto
        JOIN rd_data.tb_broadcast_room bro ON sto.room_no = bro.room_no
        JOIN rd_data.tb_member_basic bas ON bro.mem_no = bas.mem_no
        <include refid="storyCondition"/>
    </select>

    <!--<select id="callStoryDelete" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.common.vo.ProcedureVo">-->
        <!--/* Con_BoardAdm.xml - callStoryDelete */-->
        <!--call rd_admin.sp_admin_broadcast_room_story_delete(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})-->
    <!--</select>-->

    <update id="callStoryDelete" parameterType="string">
        /* Con_BoardAdm.xml - callStoryDelete */
        update rd_data.tb_broadcast_room_story set `status`=1 where idx=#{storyIdx}
    </update>

    <sql id="profileCondition">
        select date_format(session.last_upd_date,'%Y.%m.%d %H:%i:%s') as last_upd_date
            , session.mem_no as mem_no
            , profile.image_profile as image_profile
            , profile.msg_profile as msg_profile
            , basic.mem_nick as mem_nick
            , basic.mem_sex as mem_sex
            , basic.mem_birth_year as mem_birth_year
            , basic.mem_userid as mem_userid
            , basic.mem_join_date as mem_join_date
            , basic.mem_phone as mem_phone
            , basic.inner
            , (SELECT count(*) FROM rd_data.tb_member_profile_edit_history  where mem_no=session.mem_no and edit_contents like '프로필메세지 변경%') as editCnt
        FROM rd_data.tb_member_basic basic
  INNER JOIN rd_data.tb_member_profile profile ON basic.mem_no = profile.mem_no
        JOIN rd_data.tb_member_connect_state `session` ON basic.mem_no = session.mem_no
        where session.mem_no is not null
          and profile.msg_profile is not null
          and profile.msg_profile != ''
        <if test='searchText != null and searchText != ""'>
            and (basic.mem_no = #{searchText}
            OR basic.mem_userid = #{searchText}
            OR basic.mem_nick like CONCAT('%',#{searchText},'%')
            OR basic.mem_id = #{searchText}
            OR basic.mem_phone like CONCAT('%',#{searchText},'%'))
        </if>
        <if test='sDate != null and sDate !=""'>
            and date_format(profile.last_upd_date,'%Y.%m.%d') <![CDATA[>=]]> #{sDate}
        </if>
        <if test='eDate != null and eDate != ""'>
            and date_format(profile.last_upd_date,'%Y.%m.%d') <![CDATA[<=]]> #{eDate}
        </if>
        order by session.last_upd_date desc
    </sql>

    <select id="selectprofileMsgListCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberProfileInputVo" resultType="int">
        /* Con_BoardAdm.xml - selectprofileMsgListCnt */
        select count(*)
        from (
          <include refid="profileCondition"/>
        ) list
    </select>

    <select id="selectProfileMsgList" parameterType="com.dalbit.member.vo.procedure.P_MemberProfileInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberProfileOutputVo">
        /* Con_BoardAdm.xml - selectProfileMsgList */
        select *,
        @RNUM := @RNUM +1 as rowNum
        from (
          <include refid="profileCondition"/>
        ) list INNER JOIN (SELECT @RNUM := #{pageStart}) r
        limit #{pageStart}, #{pageCnt}
    </select>

    <select id="profileMsgListSummary" parameterType="com.dalbit.member.vo.procedure.P_MemberProfileInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberProfileOutputVo">
        /* Con_BoardAdm.xml - profileMsgListSummary */
          select count(*) as totalCnt
                  ,sum(if(mem_sex = 'm',1,0)) as maleCnt
                  ,sum(if(mem_sex = 'f',1,0)) as femaleCnt
                  ,sum(if(mem_sex = 'n',1,0)) as noneCnt
                    from (
              <include refid="profileCondition"/>
            ) list
    </select>

    <update id="callProfileMsgDelete" parameterType="com.dalbit.member.vo.procedure.P_MemberProfileInputVo">
        /* Con_BoardAdm.xml - callProfileMsgDelete */
        update rd_data.tb_member_profile
        set msg_profile = ''
            , last_upd_date = now()
        where mem_no=#{mem_no}
    </update>


    <sql id="clipReplyCondition">
        select  a.title
                , a.cast_no
                , b.cast_mem_no
                , castMem.mem_nick as cast_mem_nick
                , castMem.mem_sex as cast_mem_sex
                , castMem.mem_birth_year as cast_birth_year
                , b.writer_mem_no
                , writerMem.mem_nick as writer_mem_nick
                , writerMem.mem_sex as writer_mem_sex
                , writerMem.mem_birth_year as writer_birth_year
                , writerMem.inner as writer_inner
                , b.contents
                , b.write_date
                , b.last_upd_date
                , `status`
                , b.idx as castReplyIdx
          from rd_data.tb_cast_room a
          join rd_data.tb_cast_room_board b on a.cast_no = b.cast_no
          left join rd_data.tb_member_basic castMem on b.cast_mem_no = castMem.mem_no
          left join rd_data.tb_member_basic writerMem on b.writer_mem_no = writerMem.mem_no
          inner join (select @RNUM := #{pageStart}) r
        where ((castMem.mem_no = #{searchText}
                OR castMem.mem_userid = #{searchText}
                OR castMem.mem_nick like CONCAT('%',#{searchText},'%')
                OR castMem.mem_id = #{searchText}
                OR castMem.mem_phone like CONCAT('%',#{searchText},'%'))
                or (writerMem.mem_no = #{searchText}
                OR writerMem.mem_userid = #{searchText}
                OR writerMem.mem_nick like CONCAT('%',#{searchText},'%')
                OR writerMem.mem_id = #{searchText}
                OR writerMem.mem_phone like CONCAT('%',#{searchText},'%'))
            )
        and b.write_date BETWEEN concat(#{sDate},' 00:00:00') AND concat(#{eDate},' 23:59:59')
        <if test='status != 0'>
            and `status` = #{status}
        </if>
        order by b.write_date desc
    </sql>

    <select id="selectClipReplyListCnt" parameterType="com.dalbit.content.vo.ClipReplyListVo" resultType="int">
        /* Con_BoardAdm.xml - selectClipReplyListCnt */
        select count(*)
        from (
          <include refid="clipReplyCondition"/>
        ) list
    </select>

    <select id="selectClipReplyList" parameterType="com.dalbit.content.vo.ClipReplyListVo" resultType="com.dalbit.content.vo.ClipReplyListVo">
        /* Con_BoardAdm.xml - selectClipReplyList */
        select *,  @RNUM := @RNUM +1 as rowNum
        from (
          <include refid="clipReplyCondition"/>
        ) list ,(select @RNUM := #{pageStart}) r
        limit #{pageStart}, #{pageCnt}
    </select>

    <select id="clipReplyListSummary"  parameterType="com.dalbit.content.vo.ClipReplyListVo" resultType="com.dalbit.content.vo.ClipReplyListVo">
      /* Con_BoardAdm.xml - clipReplyListSummary */
      select count(*) as totalCnt
              ,sum(if(writer_mem_sex = 'm',1,0)) as maleCnt
              ,sum(if(writer_mem_sex = 'f',1,0)) as femaleCnt
              ,sum(if(writer_mem_sex = 'n',1,0)) as noneCnt
                from (
          <include refid="clipReplyCondition"/>
        ) list
    </select>

    <update id="clipReplyDelete" parameterType="com.dalbit.content.vo.ClipReplyListVo">
        /* Con_BoardAdm.xml - clipReplyDelete */
        update rd_data.tb_cast_room_board set `status`=2, last_upd_date=now() where cast_no=#{cast_no} and idx=#{castReplyIdx}
    </update>

    <select id="callMemberProfileMsg" parameterType="com.dalbit.member.vo.procedure.P_MemberProfileOutputVo" resultType="com.dalbit.member.vo.procedure.P_MemberProfileOutputVo">
        /* Con_BoardAdm.xml - callMemberProfileMsg */
        select msg_profile from rd_data.tb_member_profile where mem_no=#{mem_no}
    </select>




    <select id="editListCnt" parameterType="com.dalbit.member.vo.procedure.P_MemberEditHistInputVo" resultType="int">
        /* Con_BoardAdm.xml - editListCnt */
        <if test='type == "1"'>
        SELECT count(*) FROM rd_data.tb_broadcast_room_edit_history
         where room_no=#{room_no}
           and edit_contents like '방송방공지변경%'
        </if>
        <if test='type == "2"'>
        SELECT count(*) FROM rd_data.tb_member_profile_edit_history
         where mem_no=#{mem_no}
           and edit_contents like '프로필메세지 변경%'
        </if>
    </select>

    <select id="editList" parameterType="com.dalbit.member.vo.procedure.P_MemberEditHistInputVo" resultType="com.dalbit.member.vo.procedure.P_MemberEditHistOutputVo">
        /* Con_BoardAdm.xml - editList */
        select *
        from (
              <if test='type == "1"'>
                SELECT @RNUM := @RNUM +1 as rowNum
                      ,idx
                      ,room_no
                      ,edit_contents as editContents
                      ,op_name as opName
                      ,last_upd_date as editDate
                 FROM rd_data.tb_broadcast_room_edit_history inner join (select @RNUM := #{pageStart}) r
                where room_no=#{room_no}
                  and edit_contents like '방송방공지변경%'
              </if>
              <if test='type == "2"'>
                  SELECT @RNUM := @RNUM +1 as rowNum
                          ,idx
                          ,mem_no
                          ,edit_contents as editContents
                          ,op_name as opName
                          ,last_upd_date as editDate
                   FROM rd_data.tb_member_profile_edit_history inner join (select @RNUM := #{pageStart}) r
                  where mem_no=#{mem_no}
                    and edit_contents like '프로필메세지 변경%'
              </if>
        ) list
        limit #{pageStart}, #{pageCnt}
    </select>


    <select id="tabCount" parameterType="com.dalbit.content.vo.BoardAdmTabCountVo" resultType="com.dalbit.content.vo.BoardAdmTabCountVo">
        /* Con_BoardAdm.xml - tabCount */
        select aa.totalCnt AS storyListCnt
              ,bb.totalCnt AS fanBoardListCnt
              ,cc.totalCnt AS fanBoardReplyCnt
              ,dd.totalCnt AS noticeListCnt
              ,ee.totalCnt AS broadNoticeListCnt
              ,ff.totalCnt AS profileMsgListCnt
              ,gg.totalCnt AS clipReplyCnt
              ,hh.totalCnt AS broadNoticeReplyCnt
              ,ii.totalCnt AS mailboxCnt
        from (
        select '1' type , count(*) AS totalCnt      <!--사연-->
          from rd_data.tb_broadcast_room bro
         inner join rd_data.tb_broadcast_room_story sto on sto.room_no = bro.room_no
         INNER JOIN rd_data.tb_member_basic bas ON bro.mem_no = bas.mem_no
         <where>
            <if test='start_sel != null and start_sel !=""'>
                and sto.write_date <![CDATA[>=]]> DATE_FORMAT(#{start_sel}, '%Y.%m.%d 00:00:00')
            </if>
            <if test='end_sel != null and end_sel != ""'>
                and sto.write_date <![CDATA[<=]]> DATE_FORMAT(#{end_sel}, '%Y.%m.%d 23:59:59')
            </if>
            <if test='broState != 0'>
                <if test='broState == 1'>
                    and bro.state != 4
                </if>
                <if test='broState == 2'>
                    and bro.state = 4
                </if>
            </if>
         </where>
        ) aa,
        ( select '2' type , count(*) AS totalCnt<!--팬보드-->
        from rd_data.tb_member_fanboard fan
             <where>
              <if test='start_sel != null and start_sel != ""'>
                  and fan.last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{start_sel}, '%Y.%m.%d 00:00:00')
              </if>
              <if test='end_sel != null and end_sel != ""'>
                  and fan.last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{end_sel}, '%Y.%m.%d 23:59:59')
              </if>
                and fan.depth = 1
            </where>
        ) bb,
        (select '3' type , count(*) AS totalCnt<!--팬보드 댓글-->
        from rd_data.tb_member_fanboard as fan
            <where>
              <if test='start_sel != null and start_sel != ""'>
                  and fan.last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{start_sel}, '%Y.%m.%d 00:00:00')
              </if>
              <if test='end_sel != null and end_sel != ""'>
                  and fan.last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{end_sel}, '%Y.%m.%d 23:59:59')
              </if>
                and fan.depth = 2
            </where>
        ) cc,
        (select '4' type , count(*) AS totalCnt    <!--방송방 공지-->
                  From rd_data.tb_broadcast_room a
                 where CHAR_LENGTH(a.notice) > 0
                    <if test='start_sel != null and start_sel !=""'>
                        and a.last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{start_sel}, '%Y.%m.%d 00:00:00')
                        and a.last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{end_sel}, '%Y.%m.%d 23:59:59')
                    </if>
        ) dd,
        (select '5' type , count(*) AS totalCnt    <!--회원공지-->
                  From rd_data.tb_member_broadcast_notice a
            <where>
                <if test='start_sel != null and start_sel !=""'>
                    and a.last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{start_sel}, '%Y.%m.%d 00:00:00')
                    and a.last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{end_sel}, '%Y.%m.%d 23:59:59')
                </if>
            </where>
        ) ee,
        (
        SELECT '6' TYPE ,COUNT(*) AS totalCnt
        FROM rd_data.tb_member_basic basic
  INNER JOIN rd_data.tb_member_profile profile ON basic.mem_no = profile.mem_no
        JOIN rd_data.tb_member_connect_state `session` ON basic.mem_no = session.mem_no
         WHERE profile.msg_profile IS NOT NULL
           AND session.mem_no IS NOT NULL
           AND profile.msg_profile != ''
           AND profile.last_upd_date BETWEEN concat(#{start_sel},' 00:00:00') AND concat(#{end_sel},' 23:59:59')


        ) ff,
        (select '7' type , count(*) AS totalCnt    <!--클립댓글-->
              from rd_data.tb_cast_room a
              join rd_data.tb_cast_room_board b on a.cast_no = b.cast_no
              inner join (select @RNUM := 0) r
            <where>
                <if test='start_sel != null and start_sel !=""'>
                    and date_format(b.write_date,'%Y.%m.%d') <![CDATA[>=]]> #{start_sel}
                </if>
                <if test='end_sel != null and end_sel != ""'>
                    and date_format(b.write_date,'%Y.%m.%d') <![CDATA[<=]]> #{end_sel}
                </if>
            </where>
        ) gg,
        (select '8' type, count(*) AS totalCnt      <!-- 회원공지 댓글 -->
            from rd_data.tb_member_broadcast_notice_reply rep
            <where>
                <if test='start_sel != null and start_sel != ""'>
                    and rep.last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{start_sel}, '%Y.%m.%d 00:00:00')
                </if>
                <if test='end_sel != null and end_sel != ""'>
                    and rep.last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{end_sel}, '%Y.%m.%d 23:59:59')
                </if>
            </where>
        ) hh,
        (select '9' type, count(*) AS totalCnt      <!-- 우체통 대화 내용 -->
           from (
                SELECT a.chat_no
                FROM rd_data.tb_mailbox_chatroom a
                INNER JOIN rd_data.tb_mailbox_chatroom_member b ON a.chat_no = b.chat_no AND a.mem_no = b.mem_no
                INNER JOIN (
                    SELECT chat_no, mem_no, `type`, msg, data1, data2, data3, data4, data5, data6, delete_yn, read_yn, last_upd_date
                    FROM rd_data.tb_mailbox_chatroom_msg
                    WHERE idx IN (SELECT MAX(idx) FROM rd_data.tb_mailbox_chatroom_msg GROUP BY chat_no)
                ) c ON a.chat_no = c.chat_no AND (b.mem_no = c.mem_no OR b.target_mem_no = c.mem_no)
                <where>
                    <if test='start_sel != null and start_sel != ""'>
                        and c.last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{start_sel}, '%Y.%m.%d 00:00:00')
                    </if>
                    <if test='end_sel != null and end_sel != ""'>
                        and c.last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{end_sel}, '%Y.%m.%d 23:59:59')
                    </if>
                </where>
           ) a
        ) ii
    </select>

    <select id="callMailbox" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.content.vo.MailboxVo">
        call rd_admin.sp_admin_mailbox_list(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callMailboxGift" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.content.vo.MailboxVo">
        call rd_admin.sp_admin_mailbox_gift_list(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="mailboxTabCount" parameterType="com.dalbit.content.vo.BoardAdmTabCountVo" resultType="com.dalbit.content.vo.BoardAdmTabCountVo">
        /* Con_BoardAdm.xml - mailboxTabCount */
        select '1' type, count(*) AS totalCnt
           from (
                SELECT a.chat_no
                FROM rd_data.tb_mailbox_chatroom a
                INNER JOIN rd_data.tb_mailbox_chatroom_member b ON a.chat_no = b.chat_no AND a.mem_no = b.mem_no
                INNER JOIN (
                    SELECT chat_no, mem_no, `type`, msg, data1, data2, data3, data4, data5, data6, delete_yn, read_yn, last_upd_date
                    FROM rd_data.tb_mailbox_chatroom_msg
                    WHERE idx IN (SELECT MAX(idx) FROM rd_data.tb_mailbox_chatroom_msg GROUP BY chat_no)
                ) c ON a.chat_no = c.chat_no AND (b.mem_no = c.mem_no OR b.target_mem_no = c.mem_no)
                where c.last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{startDate}, '%Y.%m.%d 00:00:00')
                  and c.last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{endDate}, '%Y.%m.%d 23:59:59')
           ) a
        union
        select '2' type, count(*) AS totalCnt
         from rd_data.tb_mailbox_chatroom_msg
        where `type`=2
          and last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{startDate}, '%Y.%m.%d 00:00:00')
          and last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{endDate}, '%Y.%m.%d 23:59:59')
        union
        select '3' type, count(*) AS totalCnt
         from rd_data.tb_mailbox_chatroom_msg
        where `type`=3
          and last_upd_date <![CDATA[>=]]> DATE_FORMAT(#{startDate}, '%Y.%m.%d 00:00:00')
          and last_upd_date <![CDATA[<=]]> DATE_FORMAT(#{endDate}, '%Y.%m.%d 23:59:59')
    </select>


</mapper>