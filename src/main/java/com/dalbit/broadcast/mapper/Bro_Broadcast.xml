<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalbit.broadcast.dao.Bro_BroadcastDao" >

    <select id="callBroadcastList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.broadcast.vo.procedure.P_BroadcastListOutputVo">
        /* B_Broadcast.xml - callBroadcastList */
        call rd_admin.sp_admin_broadcast_room_search(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callBroadcastList_all" parameterType="com.dalbit.broadcast.vo.procedure.P_BroadcastListInputVo" resultType="com.dalbit.broadcast.vo.procedure.P_BroadcastListOutputVo">
        SELECT count(*) as totalBroadCastCnt
               ,SUM(case when os_type = 1 then 1 else 0 end) as totalAosCnt
               ,SUM(case when os_type = 2 then 1 else 0 end) as totalIosCnt
               ,SUM(case when os_type = 3 then 1 else 0 end) as totalPcCnt
          from rd_data.tb_broadcast_room
          <if test="room_liveType == 1">
            where state != 4
          </if>
          <if test="room_liveType == 2">
            where state=4
              and DATE_FORMAT(start_date, '%Y-%m-%d %H:%i:%s') >= #{startDate}
          </if>
          <!--<if test="endDate != null">-->
              <!--and DATE_FORMAT(start_date, '%Y-%m-%d') >= #{startDate} and DATE_FORMAT(start_date, '%Y-%m-%d')  <![CDATA[<=]]>  #{endDate}-->
          <!--</if>-->
          <!--<if test="endDate == null">-->
          <!--</if>-->
    </select>

    <select id="callBroadcastInfo" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.broadcast.vo.procedure.P_BroadcastDetailOutputVo">
        call rd_admin.sp_admin_broadcast_info_detail(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callBroadcastEditHistory" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.broadcast.vo.procedure.P_BroadcastEditHistOutputVo">
        call rd_admin.sp_admin_broadcast_room_edit_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>


    <select id="callBroadcastEdit" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.common.vo.ProcedureVo">
        call rd_admin.sp_admin_broadcast_room_edit(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callBroadcastInfo_withdrawal" parameterType="String" resultType="java.util.HashMap">
        select mem_userid as dj_userId,
                mem_nick as dj_nickName,
                mem_sex as dj_memSex
          from rd_data.tb_member_withdrawal_bak
         where mem_no = #{mem_no}
    </select>

    <update id="callBroadcastMemberExit" parameterType="com.dalbit.broadcast.vo.procedure.P_BroadcastEditInputVo">
        update rd_data.tb_broadcast_room_member
		   set state = 1,
			   last_upd_date = now()
         where  room_no = #{room_no} and state = 0
    </update>

    <update id="callBroadcastExit" parameterType="com.dalbit.broadcast.vo.procedure.P_BroadcastEditInputVo">
        update rd_data.tb_broadcast_room
           set state= 4,
               end_date = now(),
               airtime = TIMESTAMPDIFF( second, #{start_date}, NOW()),
               last_upd_date = now()
         where room_no = #{room_no} and state != 4
    </update>

    <select id="callBroadcastRoomExit" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.common.vo.ProcedureVo">
        call rd_data.sp_broadcast_room_exit(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callBroadcastSimpleInfo" parameterType="String" resultType="java.util.HashMap">
        SELECT
            a.title
            , a.state
            , a.start_date AS srtDt
            , a.expected_end_date AS expectedEndDt
            , a.os_type AS osType
            , a.image_background AS roomBgImg
            , b.bj_streamid AS bjStreamId
            , c.mem_nick AS nickNm
            , c.mem_sex AS gender
            , d.image_profile AS profImg
            , (select count(*) from rd_data.tb_broadcast_room_member where room_no = a.room_no and state = 0 and auth != 3) AS entryCnt
            , (a.count_good + rd_data.fn_get_point_used_item(a.room_no, 'U1447')) AS linkCnt
            , (select ifnull(sum(ifnull(gold, 0)), 0) from rd_data.tb_member_broadcast_item where room_no = a.room_no and item_type = 1) AS goldCnt
        FROM rd_data.tb_broadcast_room a INNER JOIN rd_data.tb_broadcast_room_member b ON a.room_no = b.room_no AND a.mem_no = b.mem_no AND b.auth = 3
            INNER JOIN rd_data.tb_member_basic c ON a.mem_no = c.mem_no
            INNER JOIN rd_data.tb_member_profile d ON c.mem_no = d.mem_no
        WHERE a.room_no = #{value}
    </select>

    <select id="callBroadcastLiveChatInfo" parameterType="com.dalbit.broadcast.vo.procedure.P_ChatListInputVo" resultType="com.dalbit.broadcast.vo.procedure.P_ChatListOutputVo">
        SELECT a.*
        FROM
        (
            SELECT
                msg.idx AS chatIdx
                ,msg.mem_no AS mem_no
                ,msg.nickname AS nickname
                ,msg.auth AS auth
                ,msg.last_upd_date AS writeDate
                ,msg.room_no AS room_no
                ,msg.msg AS msg
                ,basic.mem_sex AS mem_sex
                ,profile.image_profile AS image_profile
            FROM
                rd_data.tb_broadcast_room_msg AS msg
            LEFT JOIN
                rd_data.tb_member_basic AS basic
			ON
				msg.mem_no = basic.mem_no
            LEFT JOIN
                rd_data.tb_member_profile AS profile
            ON
                msg.mem_no = profile.mem_no
            WHERE
                msg.room_no = #{room_no}
                AND msg.`type`='chat'
                AND msg.idx > #{chatIdx}
            ORDER BY msg.idx
            DESC limit 500
        ) AS a
        ORDER BY chatIdx ASC;
    </select>

    <select id="callBroadcastListDjType" parameterType="com.dalbit.broadcast.vo.procedure.P_BroadcastListInputVo" resultType="com.dalbit.broadcast.vo.procedure.P_BroadcastListOutputVo">
        select ifnull(SUM(case when recomm_badge = 1 then 1 else 0 end),0) as recommDjCnt
               , ifnull(SUM(case when newdj_badge = 0 then 1 else 0 end),0) as normalDjCnt
               , ifnull(SUM(case when newdj_badge = 1 then 1 else 0 end),0) as newDjCnt
               , ifnull(SUM(case when specialdj_badge = 1 then 1 else 0 end),0) as specialDjCnt
               , (select count(*) from rd_data.tb_member_profile where mem_no in (select mem_no from rd_data.tb_broadcast_room_member where state = 0 and auth <![CDATA[<]]> 3) and new_badge ='1') as newCnt
         from rd_data.tb_member_profile a join rd_data.tb_broadcast_room b on a.mem_no = b.mem_no
        <if test="room_liveType == 1">
            and b.state != 4
        </if>
        <if test="room_liveType == 2">
            and b.state=4
        </if>
        <if test="endDate != null">
            and b.start_date >= #{startDate} and b.start_date  <![CDATA[<=]]>  #{endDate}
        </if>
        <if test="endDate == null">
            and b.start_date >= #{startDate}
        </if>
    </select>

    <insert id="callBroadCastEditHistoryAdd" parameterType="com.dalbit.broadcast.vo.procedure.P_BroadcastEditInputVo">
        insert into rd_data.tb_broadcast_room_edit_history (room_no,edit_contents,op_name,last_upd_date)
         value (#{room_no}, #{editContents}, #{opName}, now())
    </insert>

    <select id="callLiveListenerList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.broadcast.vo.procedure.P_LiveListenerListOutputVo">
        call rd_admin.sp_admin_broadcast_room_listener(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

    <select id="callLiveGuestList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.broadcast.vo.procedure.P_LiveGuestListOutputVo">
        call rd_admin.sp_admin_broadcast_room_guest_history(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>


    <select id="callLiveTabCount" parameterType="com.dalbit.broadcast.vo.procedure.P_BroadcastListInputVo" resultType="com.dalbit.broadcast.vo.procedure.P_BroadcastListOutputVo">
        select count(*) as totalCnt, 'live' as tabType
          FROM rd_data.tb_broadcast_room as a
         inner join rd_data.tb_broadcast_room_live_list b on a.room_no = b.room_no
         where a.state <![CDATA[<>]]> 4
         union
        SELECT COUNT(*), 'lis'
          FROM rd_data.tb_broadcast_room_live_list a
         INNER JOIN rd_data.tb_broadcast_room b ON a.room_no = b.room_no AND a.state <![CDATA[<]]> 4
         INNER JOIN rd_data.tb_broadcast_room_member c ON a.room_no = c.room_no AND c.state = 0 AND c.auth <![CDATA[<]]> 3
          LEFT OUTER JOIN rd_data.tb_member_basic d ON c.mem_no = d.mem_no
          LEFT OUTER JOIN rd_data.tb_member_profile e ON c.mem_no = e.mem_no
          LEFT OUTER JOIN rd_data.tb_ranking_fan_live_data_day f ON c.mem_no = f.mem_no AND DATE(f.upd_date) = now()
         union
        SELECT count(*), 'guest'
          FROM (select a.mem_no
                  FROM rd_data.tb_broadcast_room_guest a
                  LEFT JOIN rd_data.tb_member_basic b ON a.mem_no = b.mem_no
                  LEFT JOIN rd_data.tb_member_withdrawal_bak c ON a.mem_no = c.mem_no
                 WHERE a.start_date <![CDATA[>=]]> date_format(now(),'%Y-%m-%d 00:00:00')
                 GROUP BY a.room_no, a.mem_no ) a
         union
        SELECT COUNT(*),'login'
          FROM rd_data.tb_member_connect_state a
         INNER JOIN rd_data.tb_member_basic b ON a.mem_no = b.mem_no AND a.`type` = 1
         WHERE a.mem_no NOT IN (SELECT s2.mem_no
                                  FROM rd_data.tb_broadcast_room_live_list s1
                                 INNER JOIN rd_data.tb_broadcast_room_member s2 ON s1.room_no = s2.room_no AND s2.state = 0 AND s2.auth <![CDATA[<>]]> 3)
    </select>


    <select id="callBroadcastVideoList" statementType="CALLABLE" parameterType="com.dalbit.common.vo.ProcedureVo" resultType="com.dalbit.broadcast.vo.procedure.P_BroadcastListOutputVo">
        /* B_Broadcast.xml - callBroadcastList */
        call rd_admin.sp_admin_broadcast_room_search_video(#{data, mode=IN, jdbcType=VARCHAR}, #{ret, mode=OUT, jdbcType=INTEGER}, #{ext, mode=OUT, jdbcType=VARCHAR})
    </select>

</mapper>
